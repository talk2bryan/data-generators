name: Publish Python distribution to PyPI

on:
    push:
        branches:
        - main
        - master
        - release/*
    pull_request:
        branches:
        - main
        - master
        - release/*
jobs:
    run-tests:
      strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
          python-version:
            - "3.10"
            - "3.11"
      name: Test
      runs-on: ${{ matrix.os }}

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install dependencies
          run: |
            python -m pip install --upgrade poetry
            poetry install

        - name: Run tests
          run: |
            poetry run pytest --cov vcf_generator --cov-report xml:coverage.xml

        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v4
          with:
            files: coverage.xml
            verbose: true
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    build:
      name: Build distribution
      needs:
      - run-tests
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          poetry
      - name: Build a binary wheel and a source tarball
        run: poetry build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
            name: python-package-distributions
            path: dist/
    publish-to-pypi:
        name: >-
            Publish Python distribution to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        needs:
        - build
        runs-on: ubuntu-latest
        environment:
            name: pypi
            url: https://pypi.org/p/vcf-generator
        permissions:
            id-token: write
        steps:
        - name: Download all the dists
          uses: actions/download-artifact@v3
          with:
              name: python-package-distributions
              path: dist/
        - name: Publish distribution to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1
    github-release:
      name: >-
        Sign the Python distribution with Sigstore
        and upload them to GitHub Release
      needs:
      - publish-to-pypi
      runs-on: ubuntu-latest

      permissions:
        contents: write
        id-token: write

      steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v1.2.3
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
