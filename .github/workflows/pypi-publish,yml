
name: Upload Python Package

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install poetry
      run: |
        python -m pip install poetry
    - name: Build binary wheel and source distribution
      run: |
        poetry build
    - name: Store the package
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist/*
  publish-to-pypi:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/project/${{ github.repository }}
    permissions:
      id-token: write
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Releases 🚀
    runs-on: ubuntu-latest
    needs: publish-to-pypi

    permissions:
      contents: write
      id-token: write

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist

    - name: Sign the dist with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create Release
      id: create_release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      run: >-
        gh release create ${{ github.ref }} ./dist/*.tar.gz ./dist/*.whl
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/*
        asset_name: ${{ steps.create_release.outputs.upload_url }}
        asset_content_type: application/zip
